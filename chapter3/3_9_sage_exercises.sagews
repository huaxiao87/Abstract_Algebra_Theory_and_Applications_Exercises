︠7b19bc56-876d-4666-af76-b2b184c00c75s︠
#1. Create the groups CyclicPermutationGroup(8) and DihedralGroup(4) and name these groups C and D, respectively. We will understand these constructions better shortly, but for now just understand that both objects you create are actually groups.
C = CyclicPermutationGroup(8);C
D = DihedralGroup(4);D
︡0c238722-ccca-474d-bc95-d1ad1a28f1c7︡{"stdout":"Cyclic group of order 8 as a permutation group\n"}︡{"stdout":"Dihedral group of order 8 as a permutation group"}︡{"stdout":"\n"}︡{"done":true}
︠212065c2-00fa-4ae9-b285-6b198c9efe29s︠
#2. Check that C and D have the same size by using the .order() method. Determine which group is abelian, and which is not, by using the .is_abelian() method.
C.order() == D.order()
C.is_abelian()
D.is_abelian()
︡8fd94d55-0fcd-4623-bc87-75d1c91006a4︡{"stdout":"True\n"}︡{"stdout":"True\n"}︡{"stdout":"False\n"}︡{"done":true}
︠4f98cac2-8955-4b28-8d45-e3e56100b8dfs︠
#3. Use the .cayley_table() method to create the Cayley table for each group.
C.cayley_table()
D.cayley_table()
︡c81874ea-55b8-472b-b56e-96eee140ffae︡{"stdout":"*  a b c d e f g h\n +----------------\na| a b c d e f g h\nb| b c d e f g h a\nc| c d e f g h a b\nd| d e f g h a b c\ne| e f g h a b c d\nf| f g h a b c d e\ng| g h a b c d e f\nh| h a b c d e f g\n\n"}︡{"stdout":"*  a b c d e f g h\n +----------------\na| a b c d e f g h\nb| b a d c f e h g\nc| c g a e d h b f\nd| d h b f c g a e\ne| e f g h a b c d\nf| f e h g b a d c\ng| g c e a h d f b\nh| h d f b g c e a\n\n"}︡{"done":true}
︠c68f84f2-b9f1-4964-a010-662478185051s︠
#4. Write a nicely formatted discussion identifying differences between the two groups that are discernible in properties of their Cayley tables. In other words, what is different about these two groups that you can “see” in the Cayley tables? (In the Sage notebook, a Shift-click on a blue bar will bring up a mini-word-processor, and you can use use dollar signs to embed mathematics formatted using TEX syntax.)
︡8393b0d4-ba61-4795-981e-67d0940ba9a6︡{"done":true}
︠88b19fc6-88c2-449e-b629-e6f3f26f6ed8s︠
#5. For C locate the one subgroup of order 4. The group D has three subgroups of order 4. Select one of the three subgroups of D that has a different structure than the subgroup you obtained from C.
target_subgroup = {}
for g in C.subgroups():
    if g.order() == 4:
        g
        g.list()
        target_subgroup = g
        g.cayley_table()

print()

subgroup_differs_from_target = {}
for g in D.subgroups():
    if g.order() == 4:
        if not g.is_isomorphic(target_subgroup):
            g
            g.list()
            subgroup_differs_from_target = g
            g.cayley_table()
            break
︡ec35117a-6794-4959-9f8b-f6489e184081︡{"stdout":"Subgroup generated by [(1,3,5,7)(2,4,6,8), (1,5)(2,6)(3,7)(4,8)] of (Cyclic group of order 8 as a permutation group)\n[(), (1,5)(2,6)(3,7)(4,8), (1,7,5,3)(2,8,6,4), (1,3,5,7)(2,4,6,8)]\n*  a b c d\n +--------\na| a b c d\nb| b c d a\nc| c d a b\nd| d a b c\n\n"}︡{"stdout":"\n"}︡{"stdout":"Subgroup generated by [(2,4), (1,3)(2,4)] of (Dihedral group of order 8 as a permutation group)\n[(), (2,4), (1,3), (1,3)(2,4)]\n*  a b c d\n +--------\na| a b c d\nb| b a d c\nc| c d a b\nd| d c b a\n\n"}︡{"done":true}
︠70a557fb-c346-43d7-b1aa-db603863e557s︠
#6. The .subgroup(elt_list) method of a group will create the smallest subgroup containing the specified elements of the group, when given the elements as a list elt_list. Use this command to discover the shortest list of elements necessary to recreate the subgroups you found in the previous exercise. The equality comparison, ==, can be used to test if two subgroups are equal.
sub_c = C.subgroup([C([(1,3,5,7),(2,4,6,8)])]);sub_c
sub_c == target_subgroup
sub_c.list()

sub_d = D.subgroup([[(1,3),(2,4)],[(2,4)]]);sub_d
sub_d == subgroup_differs_from_target
sub_d.list()
︡1a0d7fa2-80b2-4cf7-a127-6de48db55631︡{"stdout":"Subgroup generated by [(1,3,5,7)(2,4,6,8)] of (Cyclic group of order 8 as a permutation group)\n"}︡{"stdout":"True\n"}︡{"stdout":"[(), (1,3,5,7)(2,4,6,8), (1,5)(2,6)(3,7)(4,8), (1,7,5,3)(2,8,6,4)]\n"}︡{"stdout":"Subgroup generated by [(2,4), (1,3)(2,4)] of (Dihedral group of order 8 as a permutation group)\n"}︡{"stdout":"True\n"}︡{"stdout":"[(), (2,4), (1,3), (1,3)(2,4)]\n"}︡{"done":true}
︠01b5ed57-4dc8-4f98-8aeb-7d5056ea8d09︠









